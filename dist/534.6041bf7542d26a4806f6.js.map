{"version":3,"file":"534.6041bf7542d26a4806f6.js","mappings":"+MAUQA,GAAcC,EAAAA,EAAAA,IAAO,kBAAM,sCAAyB,IAApDD,UAuBFE,EAAgBC,EAAAA,GAAAA,IAAU,mFAMhC,QA3BmB,WAClB,OAA4CC,EAAAA,EAAAA,MAApCC,EAAS,EAATA,UAAiBC,EAAK,EAAXC,KAAaC,EAAO,EAAPA,QAEhC,ECXwB,SAACF,GACzB,OAA4BG,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAwCF,EAAAA,EAAAA,UAA8BH,GAAM,eAArEM,EAAY,KAAEC,EAAe,KAC9BC,GAAiBC,EAAAA,EAAAA,kBAAiBL,GAiBxC,OAXAM,EAAAA,EAAAA,YAAU,WACTV,GACAO,EACCP,EAAMW,QAAO,SAACC,GAAI,OACjBA,EAAKC,MAAMC,cAAcC,SAASP,EAAeM,cAAc,MAGhEN,GAAmBD,EAAgBP,EAErC,GAAG,CAACQ,IAEG,CAAEF,aAAAA,EAAcF,OAAAA,EAAQY,aAfV,SAACC,GACrBZ,EAAUY,EAAEC,OAAOC,MACpB,EAcD,CDVgDC,CAAUpB,GAAjDM,EAAY,EAAZA,aAAcF,EAAM,EAANA,OAAQY,EAAY,EAAZA,aAE9B,OAAIjB,EAAkB,gBAAC,KAAO,MAC1BG,EAAgB,gBAAC,KAAK,MAGzB,gBAACN,EAAa,KACb,gBAAC,KAAK,CAACyB,KAAK,SAASF,MAAOf,EAAQkB,OAAQN,IAC5C,gBAAC,EAAAO,SAAQ,CAACC,SAAU,gBAAC,KAAO,OAC3B,gBAAC,KAAU,KACTlB,GACAA,EAAamB,KAAI,SAACb,GAAI,OAAK,gBAAClB,EAAS,CAACkB,KAAMA,EAAMc,IAAKd,EAAKe,IAAM,MAKxE,C","sources":["webpack://my-app/./src/features/Search/components/Search.tsx","webpack://my-app/./src/features/Search/hooks/useSearch.ts"],"sourcesContent":["import React, { FC, Suspense } from 'react';\n\nimport { lazily } from 'react-lazily';\nimport styled from 'styled-components';\n\nimport { useGetAllPostsQuery } from '@/store/posts/posts.api';\nimport { Input, Spinner, Wrong } from '@/components/ui';\nimport { useSearch } from '@/features/Search/hooks/useSearch';\nimport { GridLayout } from '@/layouts';\n\nconst { PostsItem } = lazily(() => import('@/features/Feed'));\n\nconst Search: FC = () => {\n\tconst { isLoading, data: posts, isError } = useGetAllPostsQuery();\n\n\tconst { postFiltered, search, changeSearch } = useSearch(posts);\n\n\tif (isLoading) return <Spinner />;\n\tif (isError) return <Wrong />;\n\n\treturn (\n\t\t<SearchWrapper>\n\t\t\t<Input type='search' value={search} change={changeSearch} />\n\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t<GridLayout>\n\t\t\t\t\t{postFiltered &&\n\t\t\t\t\t\tpostFiltered.map((post) => <PostsItem post={post} key={post.id} />)}\n\t\t\t\t</GridLayout>\n\t\t\t</Suspense>\n\t\t</SearchWrapper>\n\t);\n};\n\nconst SearchWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n\nexport default Search;\n","import React, { useDeferredValue, useEffect, useState } from 'react';\r\n\r\nimport { IPost } from '@/models/IPost';\r\n\r\nexport const useSearch = (posts: IPost[] | undefined) => {\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [postFiltered, setPostFiltered] = useState<IPost[] | undefined>(posts);\r\n\tconst deferredSearch = useDeferredValue(search);\r\n\t\r\n\tconst changeSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetSearch(e.target.value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tposts &&\r\n\t\tsetPostFiltered(\r\n\t\t\tposts.filter((post) =>\r\n\t\t\t\tpost.title.toLowerCase().includes(deferredSearch.toLowerCase())\r\n\t\t\t)\r\n\t\t);\r\n\t\t!deferredSearch  && setPostFiltered(posts);\r\n\t\t\r\n\t}, [deferredSearch]);\r\n\t\r\n\treturn { postFiltered, search, changeSearch };\r\n};\r\n"],"names":["PostsItem","lazily","SearchWrapper","styled","useGetAllPostsQuery","isLoading","posts","data","isError","useState","search","setSearch","postFiltered","setPostFiltered","deferredSearch","useDeferredValue","useEffect","filter","post","title","toLowerCase","includes","changeSearch","e","target","value","useSearch","type","change","Suspense","fallback","map","key","id"],"sourceRoot":""}